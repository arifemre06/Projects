import java.io.File;
import java.io.FileWriter;
import java.io.IOException;
import java.util.*;

/**
 * This class accomplishes Mission Firewall
 */
public class MalwareScanner {

    private final Map<String, Malware> malwareDB;

    public MalwareScanner(Map<String, Malware> malwareDB) {
        this.malwareDB = malwareDB;
    }

    /**
     * TODO: Open and read the input file while searching for threats
     * TODO: Write results to both; a new file name "scanLog.txt" and to the console
     *
     * @param filename the input file
     * @throws IOException the io exception
     */
    public void scanFile(String filename) throws IOException {
        // TODO: YOUR CODE HERE
        // pass the path to the file as a parameter
        try {
            File scanlog = new File("scanlog.txt");
            if (scanlog.createNewFile()) {
                System.out.println("File created: " + scanlog.getName());
            } else {
                System.out.println("File already exists.");
            }
        } catch (IOException e) {
            System.out.println("An error occurred.");
            e.printStackTrace();
        }

        FileWriter myWriter = new FileWriter("scanLog.txt");

        List <String> scanorder = new ArrayList<>();

        File file = new File(filename);
        Scanner sc = new Scanner(file);
        Map<String,Integer > messages = new HashMap<>();
        Integer linecounter = 0;
        while (sc.hasNextLine()){
            linecounter +=1;
            messages.put(turbo64(sc.nextLine()),linecounter);
    }
        System.out.println("Started scanning...\n"+"--------------------------------------------------------------------------------");
        int malwarecount = 0;
        for (Map.Entry<String, Integer> m : messages.entrySet()) {
                String message = m.getKey();
                Integer line = m.getValue();
            for (Map.Entry<String, Malware> entry : malwareDB.entrySet()) {
                String key = entry.getKey();
                Malware malware = entry.getValue();
                if(message.equals(key)){
                    malwarecount += 1;
                    System.out.println("Detected malware!");
                    System.out.println("Name: "+malware.getTitle());
                    System.out.println("Threat Level: "+malware.getLevel());
                    System.out.println("Hash: "+malware.getHash());
                    System.out.println("--------------------------------------------------------------------------------");

                    scanorder.add(malware.getHash()+"@"+line);
                }
            }
        }
        List<Integer> splitteditem = new ArrayList<>();
        for (String s : scanorder) {
            splitteditem.add(Integer.valueOf(s.split("@")[1]));
        }
        Collections.sort(splitteditem);
        for (Integer integer : splitteditem) {
            for (String s : scanorder) {
                if(integer == Integer.valueOf(s.split("@")[1])){
                    myWriter.write(s+"\n");
                }
            }
        }

        myWriter.close();
        System.out.println("Scan complete! "+ malwarecount +" threats are found and eliminated. Generating log file...");
    }

    public static String turbo64(String in) {
        // Implement turbo64 algorithm given by the assignment instructions
        // TODO: YOUR CODE HERE
		long mod_turbo = 4294967291L;
		long a = 0;
		long b = 1;

		for(int c = 0;c < in.length();c++){
		    a = (a + (int)(in.charAt(c))) % mod_turbo;
            b = (a + b) % mod_turbo;
		}
		return Long.toHexString((b << 32) | a);

    }
}
